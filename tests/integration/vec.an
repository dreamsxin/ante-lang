import Vec

mut v = empty Vec
v.push 1
v.push 1
v.push 2
v.push 3
v.push 5
v.push 8
v.push 13
v.push 21

global mut tests_passed = 0

assert b =
    if not b then
        puts "Assertation failed"
        exit 1
    tests_passed += 1

v.pop ()

assert (13 in v)
assert (21 not in v)

idx4 = v#4
v.remove_index 4
assert (idx4 not in v)

//remove element 8 at index 4
idx = v.remove_first 8
assert (8 not in v)
assert (idx == Some 4)

count = v.remove_all 1
assert (1 not in v)
assert (count == 2)
 
mut v2 = empty Vec
v2.push 2
v2.push 3
v2.push 13

assert (v == v2)


mut v3 = Vec.of (0..11)

mut idxs = empty Vec
idxs.push 0
idxs.push 1
idxs.push 4
idxs.push 5
idxs.push 7
idxs.push 10

v3.remove_indices idxs

mut v4 = empty Vec
v4.push 2
v4.push 3
v4.push 6
v4.push 8
v4.push 9

assert (v3 == v4)

v4.swap_last 1usz
print v4
print "tests passed: ${tests_passed}"
