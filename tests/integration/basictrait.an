
type Holder = i32

fun Holder.init := Holder 0

type Container =
   | Item i32
   | Empty

//Declare the trait NumStore
trait NumStore 't
    fun get: 't ng -> i32

    fun store: mut 't ng, i32 n


//Implement NumStore for Holder
impl NumStore Holder
    fun get: Holder h =
        i32 h

    fun store: mut Holder h, i32 n
        h := Holder n


//Implement NumStore for Container
impl NumStore Container
    fun get: Container c =
        match c with
        | Item i -> i
        | Empty -> print "warning: empty"; 0
    
    fun store: mut Container c, i32 n
        c := Item n

//define function to work on any Holder
fun print: ref Holder h
    print <| get (@h)


fun print: Container c
    match c with
    | Item i -> printf "Container { %d }\n" i;()
    | Empty -> print "Container {}"


fun print: Holder h
    print <| get h


mut h = Holder()

store h 5
print h

store h 5432
print h



mut c = Empty
print c

store c 32
print c

store c (-432)
print c
