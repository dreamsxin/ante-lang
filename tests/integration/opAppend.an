
//Reverse a string
reverse s:Str -> Str =
    mut buf = ref c8 malloc s.len

    mut i = 0usz
    while i < s.len do
        buf#i = s.cStr#(s.len-i-1)
        i += 1

    buf#i := '\0'
    Str(buf, i)


//append an integer to a string
(++) l:Str r:i32 -> Str =
    //get the string form of an integer, but in reverse
    rev_str x:i32 -> Str =
        mut buf = ref c8 malloc 12
        mut i = 0usz
        mut n = x

        while n > 0 do
            buf#i := c8(n %10) + '0'
            i += 1
            n /= 10

        buf#i := '\0'
        Str(buf, i)

    l ++ reverse (rev_str r)


s1 = "Hello "
s2 = "World"

print (s1 ++ s2)

print (s1 ++ 32)
